@page "/movies/{id:int}/edit/"

<h1>Editar película</h1>

@using BusinessLogic
@using Domain
@using UserInterface.Data

@inject MovieLogic MovieLogic
@inject CategoryLogic CategoryLogic
@inject ActorLogic ActorLogic

@inject NavigationManager NavigationManager
@inject SessionLogic CurrentUser

@if (CurrentUser.CurrentUser != null)
{
    <form>
        <div class="form-group">
            <label for="title">Título</label>
            <input type="text" class="form-control" id="title" @bind="currentMovie.Title"/>
        </div>
        <div class="form-group">
            <label for="director">Director</label>
            <input type="text" class="form-control" id="director" @bind="currentMovie.Director"/>
        </div>
        <div class="form-group">
            <label for="releaseYear">Año de lanzamiento</label>
            <input type="text" class="form-control" id="releaseYear" @bind="currentMovie.ReleaseYear"/>
        </div>
        <div class="form-group">
            <label for="Category">Category</label>
            <select class="form-control" @onchange="OnChangeCategory">
                <option disable selected value="">Select Category</option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id" selected="@(category.Id == selectedCategoryId)">
                        @category.Name
                    </option>
                }
            </select>

        </div>

        <div class="form-group">
            <label for="actor">Select Actors</label>
            <select multiple class="form-control" id="actos" @onchange="OnChangeActors">
                @foreach (var actor in actors)
                {
                    <option value="@actor.Id" selected="@currentMovie.HasActor(@actor.Id)">
                        @actor.Name
                    </option>

                }
            </select>

        </div>
        <button type="button" class="btn btn-primary" @onclick="SaveChanges">Guardar cambios</button>
        <a href="/movies">Cancelar</a>
    </form>
}


@code {

    [Parameter]
    public int Id { get; set; }

    private Movie? currentMovie;
    
    private List<Category>? categories;
    private int selectedCategoryId;

    private List<Actor> actors = new List<Actor>();

    protected override void OnInitialized(){

        currentMovie = MovieLogic.FindById(Id);
        categories = CategoryLogic.GetAll().ToList();
        actors = ActorLogic.GetAll().ToList();
        
        if (currentMovie.Category != null){
            selectedCategoryId = currentMovie.Category.Id;
        }
    }
    
    private void SaveChanges(){
        MovieLogic.Update(currentMovie);
        NavigationManager.NavigateTo("/movies");
    }
    
    private void OnChangeCategory(ChangeEventArgs e){
        int catId = int.Parse(e.Value.ToString());
        currentMovie.Category = CategoryLogic.FindById(catId);
    }
    
    public void OnChangeActors(ChangeEventArgs e){

        var actorsIdsString = (string[])e.Value;
        var actors = new List<Actor>();
        foreach (var stringId in actorsIdsString) {
            var actor = ActorLogic.FindById(int.Parse(stringId));
            actors.Add(actor);
        }
        currentMovie.Actors = actors;

    }

}